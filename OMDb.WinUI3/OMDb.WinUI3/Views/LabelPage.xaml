<Page
    x:Class="OMDb.WinUI3.Views.LabelPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:DbModels="using:OMDb.Core.DbModels"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:coverters="using:OMDb.WinUI3.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:OMDb.WinUI3.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="using:OMDb.WinUI3.Models"
    xmlns:viewmodels="using:OMDb.WinUI3.ViewModels"
    x:Name="page"
    KeyDown="StackPanel_KeyDown"
    NavigationCacheMode="Enabled"
    mc:Ignorable="d">

    <Page.Resources>
        <coverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <coverters:BoolToVisibilityConverter x:Key="ReverseBoolToVisibilityConverter" IsReverse="True" />
        <coverters:ColorToBrush x:Key="ColorToBrush" />
        <coverters:StringToFontFamily x:Key="StringToFontFamily" />
        <DataTemplate x:Key="StringDataTemplateColor" x:DataType="models:LabelTree">
            <Border
                Margin="10,0,10,10"
                BorderBrush="{Binding Path=Color2nd, Converter={StaticResource ColorToBrush}, Mode=OneWay}"
                BorderThickness="3"
                CornerRadius="3">
                <Grid
                    Width="{Binding Path=Width2nd, Mode=OneWay}"
                    Height="{Binding Path=Height2nd, Mode=OneWay}"
                    Background="{Binding Path=Color2nd, Converter={StaticResource ColorToBrush}, Mode=OneWay}">
                    <TextBlock
                        Padding="10"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontFamily="Comic Sans MS"
                        FontSize="{Binding Path=FontSize2nd, Mode=OneWay}"
                        FontWeight="Normal"
                        Text="{x:Bind Label.Name}" />
                </Grid>
            </Border>
        </DataTemplate>
    </Page.Resources>
    <Page.DataContext>
        <viewmodels:LabelViewModel />
    </Page.DataContext>
    <StackPanel>
        <Interactivity:Interaction.Behaviors>
            <Core:EventTriggerBehavior EventName="PreviewKeyDown">
                <Core:InvokeCommandAction Command="{Binding Path=TestMeCommand}" />
            </Core:EventTriggerBehavior>
        </Interactivity:Interaction.Behaviors>
        <ComboBox x:Name="FontsCombo" Header="Fonts" Height="44" Width="296" 
                                    ItemsSource="{x:Bind VM.fonts,Mode=TwoWay}" DisplayMemberPath="Source">
        </ComboBox>
        <CommandBar
            KeyUp="StackPanel_KeyUp"
            OverflowButtonVisibility="Collapsed"
            XYFocusKeyboardNavigation="Enabled">
            <AppBarButton
                Command="{x:Bind VM.AddRootCommand}"
                Icon="Add"
                ToolTipService.ToolTip="Add Tag1st(+)">
                >
                <AppBarButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="Add" />
                </AppBarButton.KeyboardAccelerators>
            </AppBarButton>
            <AppBarElementContainer>
                <AppBarButton
                    AutomationProperties.AcceleratorKey="Control A"
                    Command="{x:Bind VM.RefreshCommand}"
                    Icon="Refresh"
                    ToolTipService.ToolTip="Refresh(F5)">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator Key="F5" />
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
            </AppBarElementContainer>

            <AppBarSeparator />

            <AppBarToggleButton
                Command="{x:Bind VM.ChangeShowTypeToTreeCommand}"
                Icon="List"
                IsChecked="{x:Bind VM.IsTreeShow, Mode=TwoWay}" />
            <AppBarToggleButton
                Command="{x:Bind VM.ChangeShowTypeToExpCommand}"
                Icon="ViewAll"
                IsChecked="{x:Bind VM.IsExpShow, Mode=TwoWay}" />
            <AppBarToggleButton Command="{x:Bind VM.ChangeShowTypeToRepeaterCommand}" IsChecked="{x:Bind VM.IsRepeaterShow, Mode=TwoWay}">
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xECA5;" />
            </AppBarToggleButton>
            <AppBarSeparator />
            <AppBarButton Icon="SetTile">
                <AppBarButton.Flyout>
                    <Flyout>
                        <StackPanel>


                            <!--  标签1st/2nd选择  -->
                            <RadioButtons Header="Options:">
                                <RadioButton
                                    Command="{Binding InitTag1stInfoCommand}"
                                    Content="Tag1st"
                                    IsChecked="{Binding TagSelector, Mode=TwoWay}" />
                                <RadioButton Command="{Binding InitTag2ndInfoCommand}" Content="Tag2nd" />
                            </RadioButtons>

                            <!--  颜色选择器  -->
                            <ColorPicker
                                x:Name="cp"
                                ColorSpectrumShape="Ring"
                                IsAlphaEnabled="False"
                                IsAlphaSliderVisible="True"
                                IsAlphaTextInputVisible="True"
                                IsColorChannelTextInputVisible="True"
                                IsColorSliderVisible="True"
                                IsHexInputVisible="True"
                                IsMoreButtonVisible="False"
                                Color="{x:Bind VM.ColorCurrent, Mode=TwoWay}" />

                            <!--  字体大小  -->
                            <StackPanel Orientation="Horizontal">
                                <TextBlock>
                                    FontSize:
                                </TextBlock>
                                <TextBlock Text="{Binding ElementName=ssSize, Path=Value}" />
                            </StackPanel>
                            <Slider
                                x:Name="ss"
                                Width="200"
                                HorizontalAlignment="Left"
                                AutomationProperties.Name="simple slider"
                                Minimum="8"
                                Value="{x:Bind VM.FontSizeCurrent, Mode=TwoWay}" />

                            <!--  块参数  -->
                            <StackPanel Orientation="Horizontal">
                                <TextBlock>
                                    Width:
                                </TextBlock>
                                <TextBlock Text="{Binding ElementName=ssWidth, Path=Value}" />
                            </StackPanel>
                            <Slider
                                x:Name="ssWidth"
                                Width="200"
                                HorizontalAlignment="Left"
                                AutomationProperties.Name="simple slider"
                                Maximum="500"
                                Minimum="30"
                                Value="{x:Bind VM.WidthCurrent, Mode=TwoWay}" />
                            <StackPanel Orientation="Horizontal">
                                <TextBlock>
                                    Height:
                                </TextBlock>
                                <TextBlock Text="{Binding ElementName=ssHeight, Path=Value}" />
                            </StackPanel>
                            <Slider
                                x:Name="ssHeight"
                                Width="200"
                                HorizontalAlignment="Left"
                                AutomationProperties.Name="simple slider"
                                Maximum="500"
                                Minimum="10"
                                Value="{x:Bind VM.HeightCurrent, Mode=TwoWay}" />

                            <!--  字体Family  -->
                            <StackPanel Orientation="Horizontal">
                                <TextBlock FontFamily="{Binding Path=FontFamilyCurrent, Converter={StaticResource StringToFontFamily},Mode=OneWay}" HorizontalAlignment="Center">
                                    FontFamily:
                                </TextBlock>
                                <ComboBox Header="Fonts" Height="44" Width="296" 
                                    ItemsSource="{x:Bind VM.fonts,Mode=TwoWay}" DisplayMemberPath="Source">
                                </ComboBox>
                            </StackPanel>


                            <!--  确认/取消 按钮  -->
                            <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                                <Button Command="{x:Bind VM.StyleConfirmCommand}" Content="Confirm" />
                                <Button
                                    Margin="20,0,0,0"
                                    Command="{x:Bind VM.StyleCancelCommand}"
                                    Content="Cancel" />
                            </StackPanel>


                        </StackPanel>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
        </CommandBar>



        <ScrollViewer
            HorizontalScrollBarVisibility="Auto"
            HorizontalScrollMode="Auto"
            Visibility="{x:Bind VM.IsRepeaterShow, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
            <ItemsRepeater VerticalAlignment="Top" ItemsSource="{x:Bind VM.LabelTrees, Mode=OneWay}">
                <ItemsRepeater.ItemTemplate>
                    <DataTemplate x:DataType="models:LabelTree">
                        <StackPanel>
                            <Border
                                Width="{Binding Path=Width1st, Mode=OneWay}"
                                Height="{Binding Path=Height1st, Mode=OneWay}"
                                Margin="0,0,10,10"
                                HorizontalAlignment="Left"
                                BorderBrush="{Binding Path=Color1st, Converter={StaticResource ColorToBrush}, Mode=OneWay}"
                                BorderThickness="3"
                                CornerRadius="3">
                                <Grid Background="{Binding Path=Color1st, Converter={StaticResource ColorToBrush}, Mode=OneWay}">
                                    <Interactivity:Interaction.Behaviors>
                                        <Core:EventTriggerBehavior EventName="PointerEntered">
                                            <Core:ChangePropertyAction
                                                PropertyName="Visibility"
                                                TargetObject="{Binding ElementName=EditNameButton}"
                                                Value="Visible" />
                                        </Core:EventTriggerBehavior>
                                        <Core:EventTriggerBehavior EventName="PointerExited">
                                            <Core:ChangePropertyAction
                                                PropertyName="Visibility"
                                                TargetObject="{Binding ElementName=EditNameButton}"
                                                Value="Collapsed" />
                                        </Core:EventTriggerBehavior>
                                    </Interactivity:Interaction.Behaviors>
                                    <TextBlock
                                        Padding="10"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        CharacterSpacing="100"
                                        FontFamily="Comic Sans MS"
                                        FontSize="{Binding Path=FontSize1st, Mode=OneWay}"
                                        FontStretch="ExtraExpanded"
                                        FontWeight="Normal"
                                        Text="{x:Bind Label.Name}" />
                                </Grid>
                            </Border>
                            <ItemsRepeater ItemTemplate="{StaticResource StringDataTemplateColor}" ItemsSource="{x:Bind Children}">
                                <ItemsRepeater.Layout>
                                    <StackLayout Orientation="Horizontal" />
                                </ItemsRepeater.Layout>
                            </ItemsRepeater>
                        </StackPanel>
                    </DataTemplate>
                </ItemsRepeater.ItemTemplate>
                <ItemsRepeater.Layout>
                    <StackLayout Orientation="Vertical" />
                </ItemsRepeater.Layout>
            </ItemsRepeater>
        </ScrollViewer>



        <TreeView ItemsSource="{x:Bind VM.LabelTrees, Mode=OneWay}" Visibility="{x:Bind VM.IsTreeShow, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
            <TreeView.ItemTemplate>
                <DataTemplate x:DataType="models:LabelTree">
                    <TreeViewItem Height="36" ItemsSource="{x:Bind Children}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{x:Bind Label.Name}" />
                        </StackPanel>
                    </TreeViewItem>
                </DataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>


        <Grid Visibility="{x:Bind VM.IsExpShow, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
            <Grid.ContextFlyout>
                <MenuFlyout>
                    <MenuFlyoutItem Command="{x:Bind VM.RefreshCommand}" Text="刷新" />
                </MenuFlyout>
            </Grid.ContextFlyout>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <GridView
                x:Name="GridView"
                Margin="20"
                ItemsSource="{x:Bind VM.LabelTrees, Mode=OneWay}"
                SelectionMode="None">
                <GridView.ItemTemplate>
                    <DataTemplate x:DataType="models:LabelTree">
                        <Expander
                            Width="300"
                            VerticalAlignment="Top"
                            Header="{x:Bind Label.Name}"
                            ToolTipService.ToolTip="{x:Bind Label.Description}">
                            <Expander.Content>
                                <Grid Margin="-10,-10,-10,-8">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <ListBox Background="Transparent" ItemsSource="{x:Bind Children}">
                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="ListBoxItem">
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                <Setter Property="Padding" Value="10,4" />
                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate x:DataType="models:LabelTree">
                                                <Grid Height="32" ToolTipService.ToolTip="{x:Bind Label.Description}">
                                                    <Grid.ContextFlyout>
                                                        <MenuFlyout>
                                                            <MenuFlyoutItem
                                                                Command="{Binding ElementName=page, Path=VM.EditSubCommand}"
                                                                CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DataContext}"
                                                                Text="编辑" />
                                                            <MenuFlyoutItem
                                                                Command="{Binding ElementName=page, Path=VM.RemoveCommand}"
                                                                CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DataContext}"
                                                                Text="删除" />
                                                        </MenuFlyout>
                                                    </Grid.ContextFlyout>
                                                    <TextBlock VerticalAlignment="Center" Text="{x:Bind Label.Name}" />
                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                    <Button
                                        Grid.Row="1"
                                        Margin="0,4,0,0"
                                        HorizontalAlignment="Stretch"
                                        VerticalContentAlignment="Center"
                                        Command="{Binding ElementName=page, Path=VM.AddSubCommand}"
                                        CommandParameter="{Binding}">
                                        <FontIcon
                                            Height="16"
                                            FontFamily="Segoe MDL2 Assets"
                                            FontSize="12"
                                            Glyph="&#xE109;" />
                                    </Button>
                                </Grid>
                            </Expander.Content>
                            <Expander.ContextFlyout>
                                <MenuFlyout>
                                    <MenuFlyoutItem
                                        Command="{Binding ElementName=page, Path=VM.EditRootCommand}"
                                        CommandParameter="{Binding}"
                                        Text="编辑" />
                                    <MenuFlyoutItem
                                        Command="{Binding ElementName=page, Path=VM.RemoveCommand}"
                                        CommandParameter="{Binding}"
                                        Text="删除" />
                                </MenuFlyout>
                            </Expander.ContextFlyout>
                        </Expander>
                    </DataTemplate>
                </GridView.ItemTemplate>
                <GridView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <controls:StaggeredPanel
                            HorizontalAlignment="Stretch"
                            ColumnSpacing="0"
                            DesiredColumnWidth="300"
                            RowSpacing="0" />
                    </ItemsPanelTemplate>
                </GridView.ItemsPanel>
            </GridView>
        </Grid>
    </StackPanel>

</Page>
